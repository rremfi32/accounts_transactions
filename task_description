Задача: Реализовать сервис который будет обрабатывать асинхронные запросы вида

Запрос на списание средств:

<?xml version="1.0"?>
<debit amount="4000" tid="40319961118" uid="507f1f77bcf86cd799439011"></debit>

Ответ в случае успешной обработки, HTTP code 200:
<?xml version="1.0"?>
<result status="OK"></result>

Ответ в случае недостатка средств обработки, HTTP code 200:
<?xml version="1.0"?>
<result status="ERROR" msg="insufficient funds"></result>

Ответ в случае любой другой ошибки, HTTP code 500:
<?xml version="1.0"?>
<result status="ERROR" msg="internal server error"></result>

-----------------------------------------------------------------------------------

Запрос на зачисление средств:

<?xml version="1.0"?>
<credit amount="6000" tid="40319961125" uid="507f1f77bcf86cd799439011"></credit>

Ответ в случае успешной обработки, HTTP code 200:
<?xml version="1.0"?>
<result status="OK"></result>

Ответ в случае любой ошибки, HTTP code 500:
<?xml version="1.0"?>
<result status="ERROR" msg="internal server error"></result>

Amount - целое число, сумма списания или зачисления(всегда > 0)
Tid - уникальный идентификатор транзакции (может быть как числом так и строкой от 12 до 32 символов)
Uid - Идентификатор пользователя, число или строка от 1 до 32 символов

Описание сервиса

Сервис принимает запросы на зачисление или списание пользовательских средств. Баланс пользователя не может быть отрицательным, в случае если сумма списания средств превышает сумму на балансе пользователя, то необходимо отвечать соответствующей ошибкой, которая показана в примере выше. Также необходимо реализовать механизм который будет защищать от повторной обработки одной и той же транзакции на основе ее идентификатора (в случае если транзакция которая уже была обработана приходит повторно - необходимо вернуть успешный ответ не выполняя операций над балансом).
